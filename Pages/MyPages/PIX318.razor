@page "/PIX-318"

@using DataAccesLib
@using DataAccesLib.Models
@using BlazorDateRangePicker;

@inject IRecipeData _db


<h1>Resept: PIX-318</h1>


<h4>Resepttabell for PIX</h4>

@if (recipes is null)
{
    <p><em>Loading....</em></p>
}
else
{


    <div class="btn-group" role="group" aria-label="Basic example">
        <div class="dropdown show">
            <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" @onchange="ResetDropDown">
                @DropContent.btnBatch
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink11">
                @foreach (int b in DropContent.BatchDrop())
                {
                    <a class="dropdown-item" @onclick="() => { DropContent.btnBatchLabel(b); TableUpdate();}">@b</a>
                }
            </div>
        </div>

        


        <div class="dropdown show">
            <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @DropContent.btnID
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink33">
                @foreach (int id in DropContent.IdDrop())
                {
                    <a class="dropdown-item" @onclick="() =>DropContent.btnIDLabel(id.ToString()) ">@id</a>
                }
            </div>

        </div>

    </div>

    <div class="btn-group mx-3">
        <DateRangePicker placeholder="Velg Dato" @bind-StartDate="StartDate" @bind-EndDate="EndDate" OnRangeSelect="OnRangeSelect">

        </DateRangePicker>

    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                @if(!TableSort[0])
                @foreach(string Var in RecipeVariables)
                    {
                       <th>@Var</th> 
                    }
                

            </tr>
        </thead>
        <tbody>
            @foreach (var recipe in RecipeRead.Table)
            {
                <tr @key="recipe">
                    
                    <td>@recipe.BatchNr</td>
                    
                    <td>@recipe.Dato</td>
                    <td>@recipe.SAP</td>
                    <td>@recipe.ID</td>
                    <td>@recipe.Reaktor</td>
                    <td>@recipe.SatsVolum</td>
                    <td>@recipe.ForvFe</td>
                    <td>@recipe.OnsketFe</td>
                    <td>@recipe.OnsketSyre</td>
                    <td>@recipe.OnsketFe2</td>
                    <td>@recipe.HCLType</td>
                    <td>@recipe.ForvDamp</td>
                    <td>@recipe.VannOverordnet</td>
                    <td>@recipe.VarmtVann</td>
                    <td>@recipe.SpillVann</td>
                    <td>@recipe.ScrubberVaeske</td>
                    <th>@recipe.HCL</th>
                    <th>@recipe.Jernsulfat</th>
                    <th>@recipe.Temp</th>
                    <th>@recipe.Modningstid</th>
                    <th>@recipe.DampVentil</th>
                    <th>@recipe.Etterspyling</th>
                    <th>@recipe.O2Trykk</th>
                    <th>@recipe.O2Reaksjonstid</th>
                    <th>@recipe.DeltaTemp</th>
                    <th>@recipe.AnalysertFe3</th>
                    <th>@recipe.AnalysertFeTot</th>
                    <th>@recipe.VannSluttJustering</th>
                    <th>@recipe.VirkeligMVann</th>
                    <th>@recipe.TotTilLager</th>


                </tr>
            }
        </tbody>
    </table>








    <div class="btn-group  text-rt" role="group" aria-label="Reset">
        <button type="button" class="btn btn-success btn-lg mx-3">Eksporter til Excel</button>
        <button type="button" class="btn btn-secondary btn-lg text-right" @onclick="() => resetTable()">Reset Tabell</button>
    </div>

    <div class="my-5"></div>

    <h4>Fjerne/Legge til kolonner</h4>


   @foreach(bool sort in TableSort)
    {
        
    }



}



@code {


    private string value { get; set; }

    private string batch { get; set; }

    private int TableLen = 7;

    private List<RecipeModels> recipes;

    private List<string> RecipeVariables = new List<string>()
    {
        "Batch",
        "Dato",
        "SAP",
        "ID",
        "Reaktor",
        "Satsvolum",
        "Forventet Fe",
        "Onsket Fe",
        "Onsket Syre",
        "Onsket Fe2",
        "HCL type",
        "Forv. Damp",
        "Vann Overordnet",
        "Varmt Vann",
        "Spill Vann",
        "Scrubber Væske",
        "HCL",
        "Jernsulfat",
        "Temp",
        "Modningstid",
        "Damp Ventil",
        "Etter spyling",
        "O2 Trykk",
        "O2 Reaksjonstid",
        "DeltaTemp",
        "Analysert Fe3",
        "Analysert FeTot",
        "VannSlutt justering",
        "Virkelig Mengde Vann",
        "Tot til lager"
    };


    public bool[] TableSort = new bool[26];

    public string dropBatch = "Batch";
    private string dropDate = "Dato";
    private string dropID = "ID";

    



    DateTimeOffset? StartDate { get; set; } = DateTime.Today.AddDays(-7);
    DateTimeOffset? EndDate { get; set; } = DateTime.Today.AddDays(0).AddTicks(-1);


    Queries query = new Queries();

    public void OnRangeSelect(DateRange range)
    {

        string sql = query.DateQuery(range);
        TableUpdate();
    }




    protected override async Task OnInitializedAsync()
    {
        string sql = query.pix318();
        recipes = await _db.GetRecipes(sql);
        RecipeRead.Table = recipes;
        TableUpdate();
    }

    public async void TableUpdate()
    {

        //string sql = $"SELECT top (1000) * FROM recipe";

        recipes = await _db.GetRecipes(Queries.sql);
        RecipeRead.Table = recipes;
        //await InvokeAsync(StateHasChanged);
    }

    public async Task resetTable()
    {


        string sql = $"SELECT top ({ Queries.TableLen }) * FROM recipe";
        recipes = await _db.GetRecipes(sql);
        RecipeRead.Table = recipes;
        Queries.TableLen = TableLen;

    }

    public void ResetDropDown()
    {
        StateHasChanged();
    }

    public void TableSortConf(int n)
    {
        TableSort[n] = !TableSort[n];
    }

}
